{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/AnimationController.ts","webpack:///./src/Animations/Blink.ts","webpack:///./src/Animations/CenterToSide.ts","webpack:///./src/Animations/Fade.ts","webpack:///./src/Animations/SideToCenter.ts","webpack:///./src/Animations/SideToSide.ts","webpack:///./src/Application.ts","webpack:///./src/Errors/AnimationNotRunningError.js","webpack:///./src/Errors/ParameterParsingError.js","webpack:///./src/Led.ts","webpack:///./src/Notifications/BlinkNotification.ts","webpack:///./src/Notifications/CenterToSideNotification.ts","webpack:///external \"restify\"","webpack:///external \"restify-errors\""],"names":[],"mappings":"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","file":"LED-Controller.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/Application.ts\");\n","import {Led} from \"./Led\";\r\nimport {IAnimation} from './IAnimation'\r\nimport {Static} from \"./Animations/Static\";\r\nimport {INotification} from \"./INotification\";\r\nimport {AnimationNotRunningError} from \"./Errors/AnimationNotRunningError\";\r\nimport { IStripController } from \"./IStripController\";\r\nimport { Blink } from \"./Animations/Blink\";\r\n\r\n/**\r\n * AnimationController handles the playback of Animations and Notifications\r\n */\r\nexport class AnimationController {\r\n    animation: IAnimation = new Blink({ colors: [{r: 0, g: 255, b: 0, a: 0.2}], duration: 1000});\r\n    leds: Array<Led> = [];\r\n    strip: IStripController;\r\n    isPlayingNotification: boolean = false;\r\n    notificationStack: Array<INotification> = [];\r\n    afterNotificationAnimation: IAnimation;\r\n    running: boolean;\r\n    ups: number;\r\n    loop: NodeJS.Timer;\r\n\r\n    /**\r\n     * AnimationController handles the playback of Animations and Notifications\r\n     * @param strip Strip Controller\r\n     */\r\n    constructor(strip: IStripController) {\r\n        this.strip = strip;\r\n\r\n        // Init LEDs\r\n        for (let i = 0; i < this.strip.getLength(); i++) {\r\n            this.leds.push(new Led({r: 0, g: 0, b: 0, a: 0}));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Changes the Animation\r\n     * @param newAnimation New Animation ot be played\r\n     * @throws {AnimationNotRunningError} Animation loop must me running\r\n     */\r\n    changeAnimation(newAnimation: IAnimation): void {\r\n        if (!this.running) throw new AnimationNotRunningError(\"Animationloop currently not running!\");\r\n        if (this.isPlayingNotification) {\r\n            this.afterNotificationAnimation = newAnimation;\r\n        } else {\r\n            this.animation = newAnimation;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops the current Animation and plays the specified Notification\r\n     * @param notification Notification to be played\r\n     */\r\n    playNotification(notification: INotification): void {\r\n        if (this.isPlayingNotification) {\r\n            this.notificationStack.push(notification);\r\n            return;\r\n        }\r\n\r\n        this.afterNotificationAnimation = this.animation;\r\n        notification.attachDoneCallback(() => {\r\n            this.animation = this.afterNotificationAnimation;\r\n            this.isPlayingNotification = false;\r\n\r\n            // Play next Notification\r\n            if (this.notificationStack.length > 0) {\r\n                this.playNotification(this.notificationStack.shift());\r\n                return;\r\n            } else {\r\n                this.update();\r\n            }\r\n        });\r\n        this.animation = notification;\r\n        this.isPlayingNotification = true;\r\n    }\r\n\r\n    /**\r\n     * Calls the Animation/Notification update function\r\n     */\r\n    update() {\r\n        this.animation.update(this.leds, this.strip);\r\n    }\r\n\r\n    /**\r\n     * Starts the Animation loop\r\n     * @param updatesPerSeconde Times the update function will be called per second\r\n     */\r\n    start(updatesPerSeconde: number): void {\r\n        if (!this.running) {\r\n            this.ups = updatesPerSeconde;\r\n            this.loop = global.setInterval(this.update.bind(this), 1000 / updatesPerSeconde);\r\n            this.running = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops the Animation loop\r\n     */\r\n    stopUpdate(): void {\r\n        clearInterval(this.loop);\r\n        this.running = false;\r\n    }\r\n\r\n    /**\r\n     * Clears LED-Strip and clears internal LED-Array\r\n     * All LEDs are set to white\r\n     */\r\n    clearLEDs(): void {\r\n        this.strip.clear();\r\n        for (let i = 0; i < this.strip.getLength(); i++) {\r\n            this.leds.push(new Led({r: 0, g: 0, b: 0, a: 1}));\r\n        }\r\n        this.strip.sync();\r\n    }\r\n}","import {IAnimation} from \"../IAnimation\";\r\nimport {Led} from \"../Led\";\r\nimport {IColor} from \"../IColor\";\r\nimport {IBlinkData} from \"../Transferinterfaces/IBlinkData\";\r\nimport {ParameterParsingError} from \"../Errors/ParameterParsingError\";\r\nimport { IStripController } from \"../IStripController\";\r\n\r\nexport class Blink implements IAnimation{\r\n    colors: Array<IColor>;\r\n    activeTime: number;\r\n    curColor: number = 0;\r\n    frameCounter: number = 0;\r\n\r\n    constructor(requestParameter: IBlinkData) {\r\n        this.colors = requestParameter.colors;\r\n        this.activeTime = requestParameter.duration;\r\n        this.frameCounter = requestParameter.duration; // Color gets set at first Update\r\n\r\n        if (!(this.colors && this.activeTime && this.frameCounter)) {\r\n            throw new ParameterParsingError(\"Wrong parameter provided\");\r\n        }\r\n    }\r\n\r\n    update(leds: Array<Led>, strip: IStripController) {\r\n        if (++this.frameCounter > this.activeTime) {\r\n            this.frameCounter = 0;\r\n            if (++this.curColor >= this.colors.length) this.curColor = 0;\r\n\r\n            strip.all(this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n            strip.sync();\r\n        }\r\n    }\r\n}","import {IAnimation} from \"../IAnimation\";\r\nimport {Led} from \"../Led\";\r\nimport {IColor} from \"../IColor\";\r\nimport { ICenterToSideData } from \"../Transferinterfaces/ICenterToSideData\";\r\nimport {ParameterParsingError} from \"../Errors/ParameterParsingError\";\r\nimport { IStripController } from \"../IStripController\";\r\n\r\nexport class CenterToSide implements IAnimation{\r\n    colors: Array<IColor>;\r\n    curColor: number = 0;\r\n    ledsPreFrame: number;\r\n    border: number = 0;\r\n    centerLED: number = 0;\r\n    ledcount: number = 0;\r\n\r\n    constructor(requestParameter: ICenterToSideData) {\r\n        this.colors = requestParameter.colors;\r\n        this.centerLED = Math.round(requestParameter.ledCount * 0.5);\r\n        this.ledsPreFrame = Math.round(this.centerLED / requestParameter.duration);\r\n        this.ledcount = requestParameter.ledCount;\r\n\r\n        if (!(this.colors && this.centerLED && this.ledsPreFrame)) {\r\n            throw new ParameterParsingError(\"Wrong parameter provided\");\r\n        }\r\n    }\r\n\r\n    update(leds: Array<Led>, strip: IStripController) {\r\n\r\n        // Front\r\n        for (let i = this.centerLED; i < this.centerLED + this.border && i <= this.ledcount; i++) {\r\n            strip.set(i, this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n        }\r\n        // Back\r\n        for (let i = this.centerLED; i > this.centerLED - this.border && i >= 0; i--) {\r\n            strip.set(i, this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n        }\r\n\r\n        this.border += this.ledsPreFrame;\r\n\r\n        if (this.border > leds.length * 0.5) {\r\n            this.border = 0;\r\n            if (++this.curColor >= this.colors.length) this.curColor = 0;\r\n        }\r\n\r\n        strip.sync();\r\n    }\r\n}","import {IAnimation} from \"../IAnimation\";\r\nimport {Led} from \"../Led\";\r\nimport {IColor} from \"../IColor\";\r\nimport { IFadeData } from \"../Transferinterfaces/IFadeData\";\r\nimport {ParameterParsingError} from \"../Errors/ParameterParsingError\";\r\nimport { IStripController } from \"../IStripController\";\r\n\r\nexport class Fade implements IAnimation{\r\n    colors: Array<IColor>;\r\n    curColor: number = 0;\r\n    steps: number = 0;\r\n    colorSteps: Array<IColor>;\r\n    curStep: number = 0;\r\n    smoothness: number;\r\n    curFrame: number = 0;\r\n\r\n    constructor(requestParameter: IFadeData) {\r\n        this.colors = requestParameter.colors;\r\n        this.steps = Math.round(requestParameter.duration / requestParameter.smoothness);\r\n        this.smoothness = requestParameter.smoothness;\r\n        \r\n        if (!(this.colors && this.steps && this.smoothness)) {\r\n            throw new ParameterParsingError(\"Wrong parameter provided\");\r\n        }\r\n\r\n        this.calculateNextColorAndSteps();\r\n    }\r\n\r\n    update(leds: Array<Led>, strip: IStripController) {\r\n\r\n        if (this.curFrame == this.smoothness) {\r\n            this.curFrame = 0;\r\n            this.curStep++;\r\n\r\n            if (this.curStep >= this.colorSteps.length) {\r\n                this.calculateNextColorAndSteps();\r\n                this.curStep = 0;\r\n            }\r\n\r\n            strip.all(this.colorSteps[this.curStep].r, this.colorSteps[this.curStep].g, this.colorSteps[this.curStep].b, this.colorSteps[this.curStep].a);\r\n            strip.sync();\r\n        }\r\n        this.curFrame++;\r\n    }\r\n\r\n    calculateNextColorAndSteps() {\r\n        if (++this.curColor >= this.colors.length) this.curColor = 0;\r\n        let cur_Color = this.colors[this.curColor];\r\n        let next_Color = this.colors[this.curColor + 1 >= this.colors.length ? 0 : this.curColor + 1];\r\n\r\n        let red = cur_Color.r;\r\n        let green = cur_Color.g;\r\n        let blue = cur_Color.b;\r\n        let alpha = cur_Color.a;\r\n\r\n        let red_steps = (next_Color.r - cur_Color.r) / this.steps;\r\n        let green_steps = (next_Color.g - cur_Color.g) / this.steps;\r\n        let blue_steps = (next_Color.b - cur_Color.b) / this.steps;\r\n        let alpha_steps = (next_Color.a - cur_Color.a) / this.steps;\r\n\r\n        this.colorSteps = [];\r\n        for (let i = 0; i < this.steps; i++) {\r\n            red += red_steps;\r\n            green += green_steps;\r\n            blue += blue_steps;\r\n            alpha += alpha_steps;\r\n            \r\n            this.colorSteps.push({\r\n                r: red < 0 ? 0 : red > 255 ? 255 : red, \r\n                g: green < 0 ? 0 : green > 255 ? 255 : green, \r\n                b: blue < 0 ? 0 : blue > 255 ? 255 : blue, \r\n                a: alpha\r\n            });\r\n        }\r\n    }\r\n}","import {IAnimation} from \"../IAnimation\";\r\nimport {Led} from \"../Led\";\r\nimport {IColor} from \"../IColor\";\r\nimport { ISideToCenterData } from \"../Transferinterfaces/ISideToCenterData\";\r\nimport {ParameterParsingError} from \"../Errors/ParameterParsingError\";\r\nimport { IStripController } from \"../IStripController\";\r\n\r\nexport class SideToCenter implements IAnimation{\r\n    colors: Array<IColor>;\r\n    curColor: number = 0;\r\n    ledsPreFrame: number;\r\n    border: number = 0;\r\n\r\n    constructor(requestParameter: ISideToCenterData) {\r\n        this.colors = requestParameter.colors;\r\n        this.ledsPreFrame = Math.round((requestParameter.ledCount * 0.5) / requestParameter.duration);\r\n    \r\n        if (!(this.colors && this.ledsPreFrame)) {\r\n            throw new ParameterParsingError(\"Wrong parameter provided\");\r\n        }\r\n    }\r\n\r\n    update(leds: Array<Led>, strip: IStripController) {\r\n\r\n        // Front\r\n        for (let i = 0; i < this.border; i++) {\r\n            strip.set(i, this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n        }\r\n        // Back\r\n        for (let i = leds.length; i > leds.length - this.border; i--) {\r\n            strip.set(i, this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n        }\r\n\r\n        this.border += this.ledsPreFrame;\r\n\r\n        if (this.border > leds.length * 0.5) {\r\n\r\n            //Fill Center LEDs too\r\n            strip.all(this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n\r\n            this.border = 0;\r\n            if (++this.curColor >= this.colors.length) this.curColor = 0;\r\n        }\r\n\r\n        strip.sync();\r\n    }\r\n}","import {IAnimation} from \"../IAnimation\";\r\nimport {Led} from \"../Led\";\r\nimport {IColor} from \"../IColor\";\r\nimport { ISideToSideData } from \"../Transferinterfaces/ISideToSideData\";\r\nimport {ParameterParsingError} from \"../Errors/ParameterParsingError\";\r\nimport { IStripController } from \"../IStripController\";\r\n\r\nexport class SideToSide implements IAnimation{\r\n    colors: Array<IColor>;\r\n    curColor: number = 0;\r\n    ledsPreFrame: number;\r\n    direction: boolean = true;\r\n    border: number = 0;\r\n    ledcount: number = 0;\r\n\r\n    constructor(requestParameter: ISideToSideData) {\r\n        this.colors = requestParameter.colors;\r\n        this.ledsPreFrame = Math.round(requestParameter.ledCount / requestParameter.duration);\r\n        this.ledcount = requestParameter.ledCount;\r\n\r\n        if (!(this.colors && this.ledsPreFrame)) {\r\n            throw new ParameterParsingError(\"Wrong parameter provided\");\r\n        }\r\n    }\r\n\r\n    update(leds: Array<Led>, strip: IStripController) {\r\n\r\n        if (this.direction) {\r\n            for (let i = this.border; i < this.border + this.ledsPreFrame && i <= this.ledcount; i++) {\r\n                strip.set(i, this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n            }\r\n            this.border += this.ledsPreFrame;\r\n        } else {\r\n            for (let i = this.border; i > this.border - this.ledsPreFrame && i >= 0; i--) {\r\n                strip.set(i, this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n            }\r\n            this.border -= this.ledsPreFrame;\r\n        }\r\n\r\n        if (this.border >= leds.length) {\r\n            this.border = leds.length;\r\n            if (++this.curColor >= this.colors.length) this.curColor = 0;\r\n            this.direction = !this.direction\r\n        } else if(this.border <= 0) {\r\n            this.border = 0;\r\n            if (++this.curColor >= this.colors.length) this.curColor = 0;\r\n            this.direction = !this.direction\r\n        }\r\n\r\n        strip.sync();\r\n    }\r\n}","import {AnimationController} from \"./AnimationController\";\r\nimport {Blink} from \"./Animations/Blink\";\r\nimport {SideToCenter} from \"./Animations/SideToCenter\";\r\nimport {CenterToSide} from \"./Animations/CenterToSide\";\r\nimport {SideToSide} from \"./Animations/SideToSide\";\r\nimport {Fade} from \"./Animations/Fade\";\r\nimport {BlinkNotification} from \"./Notifications/BlinkNotification\";\r\nimport { CenterToSideNotification } from \"./Notifications/CenterToSideNotification\";\r\nimport {ParameterParsingError} from \"./Errors/ParameterParsingError\";\r\nimport {AnimationNotRunningError} from \"./Errors/AnimationNotRunningError\";\r\nimport { IStripController } from \"./IStripController\";\r\n\r\nconst RSF = require(\"restify\");\r\nconst ERRORS = require('restify-errors');\r\n\r\nconst ANIMATIONS = {\r\n    \"blink\": Blink,\r\n    \"sidetocenter\": SideToCenter,\r\n    \"centertoside\": CenterToSide,\r\n    \"sidetoside\": SideToSide,\r\n    \"fade\": Fade\r\n};\r\n\r\nconst NOTIFICATIONS = {\r\n    \"blink\": BlinkNotification,\r\n    \"centertoside\": CenterToSideNotification,\r\n};\r\n\r\n// Parameter parsing\r\nconst PARAMS = {}\r\nfor(let i = 0; i < process.argv.length; i++) {\r\n    if (process.argv[i].startsWith(\"-\")) {\r\n        let param = process.argv[i].substring(1, process.argv[i].length)\r\n        let value = param.split(\"=\")[1]; //check if null\r\n        if (value.startsWith(\"\\\"\") && value.endsWith(\"\\\"\")) {\r\n            value = value.substring(1);\r\n            value = value.substr(0, value.length - 2);\r\n        }\r\n        PARAMS[param.split(\"=\")[0]] = value\r\n    }\r\n}\r\n\r\nPARAMS[\"ledcount\"] = PARAMS[\"ledcount\"] || 182; \r\nconst LEDCOUNT: number = PARAMS[\"ledcount\"];\r\n\r\nconst TOKEN: string = PARAMS[\"token\"] || \"SUPERSECRETCODE\"; // If noone sniffs the packets this is fine :]\r\nconst API_PORT: number = PARAMS[\"port\"] || 1234;\r\nconst UPDATES_PER_SECOND: number = PARAMS[\"ups\"] || 120;\r\nconst API_NAME: string = PARAMS[\"apiname\"] || \"led_controller\";\r\nconst VERSION: string = \"0.2.0\"\r\nconst STRIPCONTROLLER: string = PARAMS[\"stripcontroller\"] || \"TextToVideoStripController\";\r\n\r\nlet uptime: number = new Date().getTime();\r\n\r\n//Load the controller and create a instance\r\nlet strip: IStripController;\r\ntry {\r\n    const stripcontrollerClass = __non_webpack_require__(STRIPCONTROLLER.toLowerCase()).default;\r\n    strip = new stripcontrollerClass(PARAMS);\r\n} catch (error) {\r\n    if (error.hasOwnProperty(\"type\")) {\r\n        if (error.type === \"parameter\") {\r\n            console.error(error.message);\r\n        }\r\n    } else {\r\n        console.error(`Couldn't find ${STRIPCONTROLLER} \\n\\t either it's not installed or you misspelled it`);\r\n    }\r\n    console.error(error);\r\n\r\n    process.exit(1);\r\n}\r\n\r\nconst animationController: AnimationController = new AnimationController(strip);\r\n\r\nconst API = RSF.createServer({\r\n    name: \"localhost\"\r\n});\r\nAPI.use(RSF.plugins.bodyParser());\r\n\r\nfunction checkToken(req, res, next): void {\r\n    if (req.body.token && req.body.token === TOKEN) {\r\n        return next();\r\n    }\r\n    return next(new ERRORS.UnauthorizedError(\"Wrong Token\"));\r\n}\r\n\r\nfunction sendSuccess(res): void {\r\n    res.contentType = \"json\";\r\n    res.send(200, {\"status\": 200, \"message\": \"LEDs changed\"});\r\n}\r\n\r\nAPI.post(\"/\" + API_NAME + \"/api/animations/*\", checkToken, (req, res, next) => {\r\n    let path = req.route.path;\r\n    let animationName = req.url.split(path.substring(0, path.lastIndexOf('/') + 1))[1];\r\n    let parameters = req.body.animation;\r\n    parameters.ledCount = LEDCOUNT;\r\n    \r\n    let AnimationClass = ANIMATIONS[animationName];\r\n    if (AnimationClass) {\r\n        try {\r\n            let animation = new AnimationClass(parameters);            \r\n            animationController.changeAnimation(animation);\r\n        } catch (error) {\r\n            if (error instanceof ParameterParsingError) {\r\n                return next(new ERRORS.BadRequestError(error.message));\r\n            }\r\n            if (error instanceof AnimationNotRunningError) {\r\n                return next(new ERRORS.ServiceUnavailableError(error.message));\r\n            }\r\n        }\r\n    } else {\r\n        return next(new ERRORS.NotFoundError(\"Animation not found\"));\r\n    }\r\n\r\n    sendSuccess(res);\r\n    return next();\r\n});\r\n\r\n\r\nAPI.post(\"/\" + API_NAME + \"/api/notification/\", checkToken, (req, res, next) => {\r\n    for(let notification of req.body.notifications) {\r\n        notification.ledCount = LEDCOUNT;\r\n\r\n        //Get Animation Class and Initialize with Parameters from Request\r\n        let NotificationClass = NOTIFICATIONS[notification.effect];\r\n        if (NotificationClass) {\r\n            try {\r\n                animationController.playNotification(new NotificationClass(notification))\r\n            } catch (error) {\r\n                if (error instanceof ParameterParsingError) {\r\n                    return next(new ERRORS.BadRequestError(error.message))\r\n                }\r\n            }\r\n        } else {\r\n            return next(new ERRORS.NotFoundError(\"Notification not found\"));\r\n        }\r\n    }\r\n\r\n    sendSuccess(res);\r\n    return next();\r\n});\r\n\r\nAPI.post(\"/\" + API_NAME + \"/api/notifications/*\", checkToken, (req, res, next) => {\r\n    let path = req.route.path;\r\n    let notificationName = req.url.split(path.substring(0, path.lastIndexOf('/') + 1))[1];\r\n    let parameters = req.body.notification;\r\n    parameters.ledCount = LEDCOUNT;\r\n    \r\n    let NotificationClass = NOTIFICATIONS[notificationName];\r\n    if (NotificationClass) {\r\n        try {\r\n            let notification = new NotificationClass(parameters);            \r\n            animationController.playNotification(notification);\r\n        } catch (error) {\r\n            return next(new ERRORS.BadRequestError(\"Wrong or insufficient parameters\"))\r\n        }\r\n    } else {\r\n        return next(new ERRORS.NotFoundError(\"Notification not found\"));\r\n    }\r\n\r\n    sendSuccess(res);\r\n    return next();\r\n});\r\n\r\nAPI.post(\"/\" + API_NAME + \"/api/start\", checkToken, (req, res, next) => {\r\n    if (req.body.update_per_second) {\r\n        animationController.start(req.body.update_per_second);\r\n    } else {\r\n        return next(new ERRORS.BadRequestError(\"Wrong or insufficient parameters\"))\r\n    }\r\n    \r\n    sendSuccess(res);\r\n    return next();\r\n});\r\n\r\nAPI.post(\"/\" + API_NAME + \"/api/stop\", checkToken, (req, res, next) => {\r\n    animationController.stopUpdate();\r\n    animationController.clearLEDs();\r\n\r\n    sendSuccess(res);\r\n    return next();\r\n});\r\n\r\nAPI.post(\"/\" + API_NAME + \"/api/status\", checkToken, (req, res, next) => {\r\n    res.contentType = \"json\";\r\n    \r\n    // Get the name of the current Animation \r\n    let currentAnimationName: string = \"None\";\r\n    if (animationController.running) {\r\n        for (let animation in ANIMATIONS) {\r\n            if (ANIMATIONS.hasOwnProperty(animation)) {\r\n                if (animationController.animation instanceof ANIMATIONS[animation]) {\r\n                    currentAnimationName = animation;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    res.send(200, {\r\n        \"status\": 200, \r\n        \"updates_per_second\": animationController.ups,\r\n        \"running\": animationController.running,\r\n        \"isPlayingNotification\": animationController.isPlayingNotification,\r\n        \"version\": VERSION,\r\n        \"uptime\": new Date().getTime() - uptime,\r\n        \"animation\": currentAnimationName,\r\n    });\r\n    return next();\r\n});\r\n\r\n// Start on Application startup\r\nanimationController.start(UPDATES_PER_SECOND);\r\n\r\nAPI.listen(API_PORT, function() {\r\n    console.log('LED-Controller %s', VERSION);\r\n    console.log('Listening on Port %s', API_PORT);\r\n    console.log('Name: %s', API_NAME);\r\n    console.log('Accesstoken: %s', TOKEN);\r\n    console.log('Updates per second: %s', UPDATES_PER_SECOND);\r\n    console.log('Number of LEDs: %s', LEDCOUNT);\r\n});\r\n\r\nfunction exitApplication() {\r\n    strip.off();\r\n    strip.shutdown();\r\n    console.log(\"Bye!\");\r\n    process.exit(0);\r\n}\r\n\r\nprocess.on (\"SIGINT\", () => exitApplication());\r\nprocess.on (\"SIGTERM\", () => exitApplication());","export class AnimationNotRunningError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.code = \"AnimationNotRunning\";\r\n        Error.captureStackTrace(this, AnimationNotRunningError);\r\n    }\r\n}","export class ParameterParsingError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.code = \"ParsingError\";\r\n        Error.captureStackTrace(this, ParameterParsingError);\r\n    }\r\n}","import {IColor} from \"./IColor\";\r\n\r\nexport class Led {\r\n    color: IColor;\r\n\r\n    constructor(color: IColor) {\r\n        this.color = color;\r\n    }\r\n}","import {Led} from \"../Led\";\r\nimport {IColor} from \"../IColor\";\r\nimport {INotification} from \"../INotification\";\r\nimport { IBlinkNotificationData } from \"../Transferinterfaces/IBlinkNotificationData\";\r\nimport {ParameterParsingError} from \"../Errors/ParameterParsingError\";\r\nimport { IStripController } from \"../IStripController\";\r\n\r\nexport class BlinkNotification implements INotification{\r\n    colors: Array<IColor>;\r\n    activeTime: number;\r\n    curColor: number = -1; // first run skips first color\r\n    frameCounter: number = 0;\r\n    finishCallback: Function;\r\n\r\n    constructor(requestParameter: IBlinkNotificationData) {\r\n        this.colors = requestParameter.colors;\r\n        this.activeTime = requestParameter.duration;\r\n        this.frameCounter = this.activeTime; // Color gets set at first Update\r\n    \r\n        if (!(this.colors && this.activeTime)) {\r\n            throw new ParameterParsingError(\"Wrong parameter provided\");\r\n        }\r\n    }\r\n\r\n    attachDoneCallback(callback: Function) {\r\n        this.finishCallback = callback;\r\n    }\r\n\r\n    update(leds: Array<Led>, strip: IStripController) {\r\n        if (++this.frameCounter > this.activeTime) {\r\n            this.frameCounter = 0;\r\n            if (++this.curColor >= this.colors.length) {\r\n                this.finishCallback();\r\n                return;\r\n            }\r\n\r\n            strip.all(this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n            strip.sync();\r\n        }\r\n    }\r\n}","import {Led} from \"../Led\";\r\nimport {IColor} from \"../IColor\";\r\nimport {INotification} from \"../INotification\";\r\nimport { ICenterToSideNotificationData } from \"../Transferinterfaces/ICenterToSideNotificationData\";\r\nimport {ParameterParsingError} from \"../Errors/ParameterParsingError\";\r\nimport { IStripController } from \"../IStripController\";\r\n\r\nexport class CenterToSideNotification implements INotification{\r\n    colors: Array<IColor>;\r\n    curColor: number = 0;\r\n    ledsPreFrame: number;\r\n    border: number = 0;\r\n    centerLED: number = 0;\r\n    finishCallback: Function;\r\n\r\n    constructor(requestParameter: ICenterToSideNotificationData) {\r\n        this.colors = requestParameter.colors;\r\n        this.centerLED = Math.round(requestParameter.ledCount * 0.5);\r\n        this.ledsPreFrame = Math.round(this.centerLED / requestParameter.duration);\r\n\r\n        if (!(this.colors && this.centerLED && this.ledsPreFrame)) {\r\n            throw new ParameterParsingError(\"Wrong parameter provided\");\r\n        }\r\n    }\r\n\r\n    attachDoneCallback(callback) {\r\n        this.finishCallback = callback;\r\n    }\r\n\r\n    update(leds: Array<Led>, strip: IStripController) {\r\n\r\n        // Front\r\n        for (let i = this.centerLED; i < this.centerLED + this.border; i++) {\r\n            strip.set(i, this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n        }\r\n        // Back\r\n        for (let i = this.centerLED; i > this.centerLED - this.border; i--) {\r\n            strip.set(i, this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n        }\r\n        strip.sync();\r\n\r\n        this.border += this.ledsPreFrame;\r\n\r\n        if (this.border > leds.length * 0.5) {\r\n            this.border = 0;\r\n            if (++this.curColor >= this.colors.length) this.finishCallback();\r\n        }\r\n    }\r\n}","module.exports = require(\"restify\");","module.exports = require(\"restify-errors\");"],"sourceRoot":""}