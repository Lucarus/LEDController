{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/API.ts","webpack:///./src/AnimationController.ts","webpack:///./src/AnimationStore.ts","webpack:///./src/Animations/Blink.ts","webpack:///./src/Animations/CenterToSide.ts","webpack:///./src/Animations/Fade.ts","webpack:///./src/Animations/Fire.ts","webpack:///./src/Animations/SideToCenter.ts","webpack:///./src/Animations/SideToSide.ts","webpack:///./src/Application.ts","webpack:///./src/Errors/AnimationNotFoundError.ts","webpack:///./src/Errors/AnimationNotRunningError.ts","webpack:///./src/Errors/ParameterParsingError.ts","webpack:///./src/Led.ts","webpack:///./src/Notifications/BlinkNotification.ts","webpack:///./src/Notifications/CenterToSideNotification.ts","webpack:///./src/Notifications/RippleToCenterNotification.ts","webpack:///external \"fs\"","webpack:///external \"restify\"","webpack:///external \"restify-errors\""],"names":[],"mappings":"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","file":"LED-Controller.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/Application.ts\");\n","import { AnimationController } from \"./AnimationController\";\r\nimport { Server } from \"restify\";\r\nimport {ParameterParsingError} from \"./Errors/ParameterParsingError\";\r\nimport {AnimationNotRunningError} from \"./Errors/AnimationNotRunningError\";\r\nimport { AnimationStore } from \"./AnimationStore\";\r\nimport { AnimationNotFoundError } from \"./Errors/AnimationNotFoundError\";\r\n\r\nconst ERRORS = require(\"restify-errors\");\r\nconst RSF = require(\"restify\");\r\n\r\nexport class API {    \r\n    private animationController: AnimationController;\r\n    private server: Server; \r\n    private options: APIOptions;\r\n    private uptime: number;\r\n    private animationStore: AnimationStore;\r\n    \r\n    constructor(animationController: AnimationController, options: APIOptions) {\r\n        this.animationController = animationController;\r\n        this.server = RSF.createServer(options);\r\n        this.server.use(RSF.plugins.bodyParser());\r\n        this.options = options;\r\n        this.uptime = new Date().getTime();\r\n        this.animationStore = AnimationStore.getInstance();\r\n\r\n        this.registerRoutes();\r\n    }\r\n\r\n\r\n    private registerRoutes(): void {\r\n        // Check if the token is used in basic authorization as password for user \"token\"\r\n        this.server.use(RSF.plugins.authorizationParser());\r\n        this.server.use((req, res, next) => {\r\n            // Skip for status\r\n            // if (req.getPath().endsWith(\"/status\")) return next();\r\n            if (req.username !== \"token\" || req.authorization.basic.password !== this.options.token) {\r\n                return next(new ERRORS.UnauthorizedError(\"Wrong Token\"));\r\n            }\r\n            return next();\r\n        });\r\n\r\n        // Simple logging\r\n        this.server.on(\"Unauthorized\", (req, res, err, cb) => {\r\n            console.error(err);\r\n            cb();\r\n        });\r\n\r\n        this.server.post(\"/api/v1/animations/*\", (req, res, next) => {\r\n            let path = req.getPath();\r\n            let animationName = req.url.split(path.substring(0, path.lastIndexOf('/') + 1))[1];\r\n            let parameters = req.body.animation;\r\n            parameters.ledCount = this.options.ledCount;\r\n            \r\n            try {\r\n                let animation = this.animationStore.getAnimation(animationName, parameters);           \r\n                this.animationController.changeAnimation(animation);\r\n            } catch (error) {\r\n                if (error instanceof ParameterParsingError) {\r\n                    return next(new ERRORS.BadRequestError(error.message));\r\n                }\r\n                if (error instanceof AnimationNotRunningError) {\r\n                    return next(new ERRORS.ServiceUnavailableError(error.message));\r\n                }\r\n                if (error instanceof AnimationNotFoundError) {\r\n                    return next(new ERRORS.NotFoundError(error.message));\r\n                }\r\n                return next(new ERRORS.InternalServerError(\"Something doesn't seem right\"));\r\n            }\r\n\r\n            res.contentType = \"json\";\r\n            res.send({\"status\": 200, \"message\": \"Changed Animation\"});\r\n            return next();\r\n        });\r\n        \r\n        this.server.post(\"/api/v1/notification/\", (req, res, next) => {\r\n            for(let notification of req.body.notifications) {\r\n                notification.ledCount = this.options.ledCount;\r\n        \r\n                //Get Animation Class and Initialize with Parameters from Request\r\n                if (!notification.parameters) {\r\n                    return next(new ERRORS.BadRequestError(\"No Parameters provided\"));\r\n                }\r\n                try {\r\n                    let notif = this.animationStore.getNotification(notification.effect, notification.parameters)\r\n                    this.animationController.playNotification(notif);\r\n                } catch (error) {\r\n                    if (error instanceof ParameterParsingError) {\r\n                        return next(new ERRORS.BadRequestError(error.message))\r\n                    }\r\n                    if (error instanceof AnimationNotFoundError) {\r\n                        return next(new ERRORS.NotFoundError(error.message));\r\n                    }\r\n                    return next(new ERRORS.InternalServerError(\"Something doesn't seem right\"));\r\n                }\r\n\r\n            }\r\n        \r\n            res.contentType = \"json\";\r\n            res.send({\"status\": 200, \"message\": \"Added Notifications to queue\"});\r\n            return next();\r\n        });\r\n        \r\n        this.server.post(\"/api/v1/notifications/*\", (req, res, next) => {\r\n            let path = req.getPath();\r\n            let notificationName = req.url.split(path.substring(0, path.lastIndexOf('/') + 1))[1];\r\n            let parameters = req.body.notification;\r\n            parameters.ledCount = this.options.ledCount;\r\n            \r\n            try {\r\n                let notification = this.animationStore.getNotification(notificationName, parameters);            \r\n                this.animationController.playNotification(notification);\r\n            } catch (error) {\r\n                if (error instanceof ParameterParsingError) {\r\n                    return next(new ERRORS.BadRequestError(error.message))\r\n                }\r\n                if (error instanceof AnimationNotFoundError) {\r\n                    return next(new ERRORS.NotFoundError(error.message));\r\n                }\r\n                return next(new ERRORS.InternalServerError(\"Something doesn't seem right\"));\r\n            }\r\n        \r\n            res.contentType = \"json\";\r\n            res.send({\"status\": 200, \"message\": \"Added Notification to queue\"});\r\n            return next();\r\n        });\r\n        \r\n        this.server.post(\"/api/v1/start\", (req, res, next) => {\r\n            if (!req.body.update_per_second) return next(new ERRORS.BadRequestError(\"Wrong or insufficient parameters\"));\r\n\r\n            this.animationController.start(req.body.update_per_second);\r\n        \r\n            res.contentType = \"json\";\r\n            res.send({\"status\": 200, \"message\": \"Started animation\"});\r\n            return next();\r\n        });\r\n        \r\n        this.server.get(\"/api/v1/stop\", (req, res, next) => {\r\n            this.animationController.stop();\r\n            this.animationController.clearLEDs();\r\n        \r\n            res.contentType = \"json\";\r\n            res.send({\"status\": 200, \"message\": \"Stopped animation\"});\r\n            return next();\r\n        });\r\n        \r\n        this.server.get(\"/api/v1/status\", (req, res, next) => {\r\n            res.contentType = \"json\";\r\n            \r\n            // Get the name of the current Animation \r\n            let currentAnimationName: string = \"None\";\r\n            if (this.animationController.isRunning()) {\r\n                currentAnimationName = this.animationController.getAnimation().getName();\r\n            }\r\n\r\n            res.send({\r\n                \"status\": 200, \r\n                \"updates_per_second\": this.animationController.getUPS(),\r\n                \"running\": this.animationController.isRunning(),\r\n                \"isPlayingNotification\": this.animationController.isPlayingNotification,\r\n                \"version\": this.options.version,\r\n                \"uptime\": new Date().getTime() - this.uptime,\r\n                \"animation\": currentAnimationName,\r\n            });\r\n            return next();\r\n        });\r\n        \r\n    }\r\n\r\n    listen(cb: Function): void {\r\n        this.server.listen(this.options.port, cb);\r\n    }\r\n\r\n    close(cb: ()=>any): void {\r\n        this.server.close(cb);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface APIOptions {\r\n    certificate?: string | Buffer | ReadonlyArray<string | Buffer>;\r\n    key?: string | Buffer | ReadonlyArray<string | Buffer>;\r\n    port: number;\r\n    version: string;\r\n    token: string;\r\n    ledCount: number;\r\n}","import { Led } from \"./Led\";\r\nimport { IAnimation } from './Interfaces/IAnimation'\r\nimport { INotification } from \"./Interfaces/INotification\";\r\nimport { IStripController } from \"./Interfaces/IStripController\";\r\nimport { Blink } from \"./Animations/Blink\";\r\n\r\n/**\r\n * AnimationController handles the playback of Animations and Notifications\r\n */\r\nexport class AnimationController {\r\n    private animation: IAnimation = new Blink({ colors: [{r: 0, g: 255, b: 0, a: 0.2}], duration: 1000});\r\n    private leds: Array<Led> = [];\r\n    private strip: IStripController;\r\n    private playingNotification: boolean = false;\r\n    private notificationStack: Array<INotification> = [];\r\n    private afterNotificationAnimation: IAnimation;\r\n    private running: boolean = false;\r\n    private stopAfterNotification: boolean = false;\r\n    private ups: number = 30;\r\n    private loop: NodeJS.Timer;\r\n\r\n    /**\r\n     * AnimationController handles the playback of Animations and Notifications\r\n     * @param strip Strip Controller\r\n     */\r\n    constructor(strip: IStripController) {\r\n        this.strip = strip;\r\n\r\n        // Init LEDs\r\n        for (let i = 0; i < this.strip.getLength(); i++) {\r\n            this.leds.push(new Led({r: 0, g: 0, b: 0, a: 0}));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Changes the Animation\r\n     * @param newAnimation New Animation ot be played\r\n     * @throws {AnimationNotRunningError} Animation loop must me running\r\n     */\r\n    public changeAnimation(newAnimation: IAnimation): void {\r\n        if (this.playingNotification) {\r\n            this.afterNotificationAnimation = newAnimation;\r\n        } else {\r\n            this.animation = newAnimation;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops the current Animation and plays the specified Notification\r\n     * @param notification Notification to be played\r\n     */\r\n    public playNotification(notification: INotification): void {\r\n        if (this.playingNotification) {\r\n            this.notificationStack.push(notification);\r\n            return;\r\n        }\r\n\r\n        this.afterNotificationAnimation = this.animation;\r\n        notification.attachDoneCallback(() => {\r\n            this.animation = this.afterNotificationAnimation;\r\n            this.playingNotification = false;\r\n\r\n            // Play next Notification\r\n            if (this.notificationStack.length > 0) {\r\n                this.playNotification(this.notificationStack.shift());\r\n                return;\r\n            } else {\r\n                if (this.stopAfterNotification) {\r\n                    // Restop Loop after notification finished\r\n                    this.stop();\r\n                    this.clearLEDs();\r\n                } else {\r\n                    this.update();\r\n                }\r\n            }\r\n        });\r\n        this.animation = notification;\r\n        this.playingNotification = true;\r\n\r\n        // Start Loop for notification\r\n        if (!this.running && !this.stopAfterNotification) {\r\n            this.start(this.ups);\r\n            this.stopAfterNotification = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls the Animation/Notification update function\r\n     */\r\n    public update() {\r\n        this.animation.update(this.leds, this.strip, this.afterNotificationAnimation);\r\n    }\r\n\r\n    /**\r\n     * Starts the Animation loop\r\n     * @param updatesPerSeconde Times the update function will be called per second\r\n     */\r\n    public start(updatesPerSeconde: number): void {\r\n        if (this.running && this.stopAfterNotification) {\r\n            this.stopAfterNotification = false;\r\n        }\r\n        if (!this.running) {\r\n            this.ups = updatesPerSeconde;\r\n            this.loop = global.setInterval(this.update.bind(this), 1000 / updatesPerSeconde);\r\n            this.running = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops the Animation loop\r\n     */\r\n    public stop(): void {\r\n        clearInterval(this.loop);\r\n        this.running = false;\r\n    }\r\n\r\n    /**\r\n     * Clears LED-Strip and clears internal LED-Array\r\n     * All LEDs are set to white\r\n     */\r\n    public clearLEDs(): void {\r\n        this.strip.clear();\r\n        for (let i = 0; i < this.strip.getLength(); i++) {\r\n            this.leds.push(new Led({r: 0, g: 0, b: 0, a: 1}));\r\n        }\r\n        this.strip.sync();\r\n    }\r\n    \r\n    //\r\n    // Getters\r\n    //\r\n\r\n    public getAnimation(): IAnimation {\r\n        return this.animation;\r\n    }\r\n\r\n    public getUPS(): number {\r\n        return this.ups;\r\n    }\r\n\r\n    public isRunning(): boolean {\r\n        return this.running;\r\n    }\r\n\r\n    public isPlayingNotification(): boolean {\r\n        return this.playingNotification\r\n    }\r\n}","import { Blink } from \"./Animations/Blink\";\r\nimport { SideToCenter } from \"./Animations/SideToCenter\";\r\nimport { CenterToSide } from \"./Animations/CenterToSide\";\r\nimport { SideToSide } from \"./Animations/SideToSide\";\r\nimport { Fade } from \"./Animations/Fade\";\r\nimport { Fire } from \"./Animations/Fire\";\r\nimport { BlinkNotification } from \"./Notifications/BlinkNotification\";\r\nimport { CenterToSideNotification } from \"./Notifications/CenterToSideNotification\";\r\nimport { RippleToCenterNotification } from \"./Notifications/RippleToCenterNotification\";\r\nimport { INotification } from \"./Interfaces/INotification\";\r\nimport { IAnimation } from \"./Interfaces/IAnimation\";\r\nimport { AnimationNotFoundError } from \"./Errors/AnimationNotFoundError\";\r\n\r\nexport class AnimationStore {\r\n\r\n    // Loads the default Animations\r\n    private animations = {\r\n        \"blink\": Blink,\r\n        \"sidetocenter\": SideToCenter,\r\n        \"centertoside\": CenterToSide,\r\n        \"sidetoside\": SideToSide,\r\n        \"fade\": Fade,\r\n        \"fire\": Fire,\r\n    };\r\n\r\n    // Loads the default Notifications\r\n    private notifications = {\r\n        \"blink\": BlinkNotification,\r\n        \"centertoside\": CenterToSideNotification,\r\n        \"rippletocenter\": RippleToCenterNotification,\r\n    };\r\n\r\n    private static instance: AnimationStore;\r\n\r\n    /**\r\n     * Gets and or tries to load the Animation\r\n     * @param name Name of the Animation\r\n     */\r\n    public getAnimation(name: string, params: any): IAnimation {\r\n        if (!this.animations[name]) throw new AnimationNotFoundError(\"Animation not found\");\r\n        return new this.animations[name](params);\r\n    }\r\n\r\n    /**\r\n     * Gets and or tries to load the Notification\r\n     * @param name Name of the Notification\r\n     */\r\n    public getNotification(name: string, params: any): INotification {\r\n        if (!this.notifications[name]) throw new AnimationNotFoundError(\"Notification not found\");\r\n        return new this.notifications[name](params);\r\n    }\r\n\r\n\r\n    public static getInstance(): AnimationStore {\r\n        if (!AnimationStore.instance) {\r\n            AnimationStore.instance = new AnimationStore();\r\n        }\r\n        return AnimationStore.instance;\r\n    }\r\n}","import { IAnimation } from \"../Interfaces/IAnimation\";\r\nimport { Led } from \"../Led\";\r\nimport { IColor } from \"../Interfaces/IColor\";\r\nimport { ParameterParsingError } from \"../Errors/ParameterParsingError\";\r\nimport { IStripController } from \"../Interfaces/IStripController\";\r\n\r\ninterface IBlinkData {\r\n    duration: number,  // in Frames\r\n    colors: Array<IColor>\r\n}\r\n\r\nexport class Blink implements IAnimation{\r\n    colors: Array<IColor>;\r\n    activeTime: number;\r\n    curColor: number = 0;\r\n    frameCounter: number = 0;\r\n\r\n    constructor(requestParameter: IBlinkData) {\r\n        this.colors = requestParameter.colors;\r\n        this.activeTime = requestParameter.duration;\r\n        this.frameCounter = requestParameter.duration; // Color gets set at first Update\r\n\r\n        if (!(this.colors && this.activeTime && this.frameCounter)) {\r\n            throw new ParameterParsingError(\"Wrong parameter provided\");\r\n        }\r\n    }\r\n\r\n    public update(leds: Array<Led>, strip: IStripController): void {\r\n        if (++this.frameCounter > this.activeTime) {\r\n            this.frameCounter = 0;\r\n            if (++this.curColor >= this.colors.length) this.curColor = 0;\r\n\r\n            strip.all(this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n            strip.sync();\r\n        }\r\n    }\r\n\r\n    public getName(): string {\r\n        return \"Blink\";\r\n    }\r\n}","import { IAnimation } from \"../Interfaces/IAnimation\";\r\nimport { Led } from \"../Led\";\r\nimport { IColor } from \"../Interfaces/IColor\";\r\nimport { ParameterParsingError } from \"../Errors/ParameterParsingError\";\r\nimport { IStripController } from \"../Interfaces/IStripController\";\r\n\r\ninterface ICenterToSideData {\r\n    ledCount: number,\r\n    duration: number,\r\n    colors: Array<IColor>\r\n}\r\n\r\nexport class CenterToSide implements IAnimation{\r\n    colors: Array<IColor>;\r\n    curColor: number = 0;\r\n    ledsPreFrame: number;\r\n    border: number = 0;\r\n    persBorder: number = 0;\r\n    centerLED: number = 0;\r\n    ledcount: number = 0;\r\n\r\n    constructor(requestParameter: ICenterToSideData) {\r\n        this.colors = requestParameter.colors;\r\n        this.centerLED = Math.round(requestParameter.ledCount * 0.5);\r\n        this.ledsPreFrame = this.centerLED / requestParameter.duration;\r\n        this.ledcount = requestParameter.ledCount;\r\n\r\n        if (!(this.colors && this.centerLED && this.ledsPreFrame)) {\r\n            throw new ParameterParsingError(\"Wrong parameter provided\");\r\n        }\r\n    }\r\n\r\n    public update(leds: Array<Led>, strip: IStripController): void {\r\n\r\n        // Front\r\n        for (let i = this.centerLED; i < this.centerLED + this.border && i <= this.ledcount; i++) {\r\n            strip.set(i, this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n        }\r\n        // Back\r\n        for (let i = this.centerLED; i > this.centerLED - this.border && i >= 0; i--) {\r\n            strip.set(i, this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n        }\r\n\r\n        this.persBorder += this.ledsPreFrame;\r\n        this.border = Math.round(this.persBorder);\r\n\r\n        if (this.border > leds.length * 0.5) {\r\n            this.border = 0;\r\n            this.persBorder = 0;\r\n            if (++this.curColor >= this.colors.length) this.curColor = 0;\r\n        }\r\n\r\n        strip.sync();\r\n    }\r\n\r\n    public getName(): string {\r\n        return \"CenterToSide\";\r\n    }\r\n}","import { IAnimation } from \"../Interfaces/IAnimation\";\r\nimport { Led } from \"../Led\";\r\nimport { IColor } from \"../Interfaces/IColor\";\r\nimport { ParameterParsingError } from \"../Errors/ParameterParsingError\";\r\nimport { IStripController } from \"../Interfaces/IStripController\";\r\n\r\ninterface IFadeData {\r\n    duration: number,  // in Frames\r\n    smoothness: number, // frames to skip while recalculation\r\n    colors: Array<IColor>\r\n}\r\n\r\nexport class Fade implements IAnimation{\r\n    colors: Array<IColor>;\r\n    curColor: number = 0;\r\n    steps: number = 0;\r\n    colorSteps: Array<IColor>;\r\n    curStep: number = 0;\r\n    smoothness: number;\r\n    curFrame: number = 0;\r\n\r\n    constructor(requestParameter: IFadeData) {\r\n        this.colors = requestParameter.colors;\r\n        this.steps = Math.round(requestParameter.duration / requestParameter.smoothness) || 1; // Atleast 1 step\r\n        this.smoothness = requestParameter.smoothness;\r\n        \r\n        if (!(this.colors && this.steps && this.smoothness)) {\r\n            throw new ParameterParsingError(\"Wrong parameter provided\");\r\n        }\r\n\r\n        this.calculateNextColorAndSteps();\r\n    }\r\n\r\n    public update(leds: Array<Led>, strip: IStripController): void {\r\n\r\n        if (this.curFrame == this.smoothness) {\r\n            this.curFrame = 0;\r\n            this.curStep++;\r\n\r\n            if (this.curStep >= this.colorSteps.length) {\r\n                this.calculateNextColorAndSteps();\r\n                this.curStep = 0;\r\n            }\r\n\r\n            strip.all(this.colorSteps[this.curStep].r, this.colorSteps[this.curStep].g, this.colorSteps[this.curStep].b, this.colorSteps[this.curStep].a);\r\n            strip.sync();\r\n        }\r\n        this.curFrame++;\r\n    }\r\n\r\n    private calculateNextColorAndSteps(): void {\r\n        if (++this.curColor >= this.colors.length) this.curColor = 0;\r\n        let cur_Color = this.colors[this.curColor];\r\n        let next_Color = this.colors[this.curColor + 1 >= this.colors.length ? 0 : this.curColor + 1];\r\n\r\n        let red = cur_Color.r;\r\n        let green = cur_Color.g;\r\n        let blue = cur_Color.b;\r\n        let alpha = cur_Color.a;\r\n\r\n        let red_steps = (next_Color.r - cur_Color.r) / this.steps;\r\n        let green_steps = (next_Color.g - cur_Color.g) / this.steps;\r\n        let blue_steps = (next_Color.b - cur_Color.b) / this.steps;\r\n        let alpha_steps = (next_Color.a - cur_Color.a) / this.steps;\r\n\r\n        this.colorSteps = [];\r\n        for (let i = 0; i < this.steps; i++) {\r\n            red += red_steps;\r\n            green += green_steps;\r\n            blue += blue_steps;\r\n            alpha += alpha_steps;\r\n            \r\n            this.colorSteps.push({\r\n                r: red < 0 ? 0 : red > 255 ? 255 : red, \r\n                g: green < 0 ? 0 : green > 255 ? 255 : green, \r\n                b: blue < 0 ? 0 : blue > 255 ? 255 : blue, \r\n                a: alpha\r\n            });\r\n        }\r\n    }\r\n\r\n    public getName(): string {\r\n        return \"Fade\";\r\n    }\r\n}","import { IAnimation } from \"../Interfaces/IAnimation\";\r\nimport { Led } from \"../Led\";\r\nimport { IColor } from \"../Interfaces/IColor\";\r\nimport { ParameterParsingError } from \"../Errors/ParameterParsingError\";\r\nimport { IStripController } from \"../Interfaces/IStripController\";\r\n\r\ninterface IFireData {\r\n    ledCount: number,  \r\n    minFadeDuration: number,\r\n    maxFadeDuration: number,\r\n    colors: Array<IColor>\r\n}\r\n\r\nexport class Fire implements IAnimation{\r\n    colors: Array<IColor>;\r\n    minFadeDuration: number;\r\n    maxFadeDuration: number;\r\n    pixelOntime: Array<number>;\r\n    ledcount: number;\r\n\r\n    constructor(requestParameter: IFireData) {\r\n        this.colors = requestParameter.colors;\r\n        this.maxFadeDuration = requestParameter.maxFadeDuration;\r\n        this.minFadeDuration = requestParameter.minFadeDuration;\r\n        this.ledcount = requestParameter.ledCount;\r\n\r\n        this.pixelOntime = new Array()\r\n        for (let i = 0; i < this.ledcount; i++) {\r\n            this.pixelOntime.push(0);\r\n        }\r\n        \r\n        if (!(this.colors && this.minFadeDuration && this.minFadeDuration)) {\r\n            throw new ParameterParsingError(\"Wrong parameter provided\");\r\n        }\r\n    }\r\n\r\n    public update(leds: Array<Led>, strip: IStripController): void {\r\n        for (let i = 0; i < this.ledcount; i++) {\r\n            if (this.pixelOntime[i] <= 0) {\r\n                // change color\r\n                this.pixelOntime[i] = Math.round(this.minFadeDuration + (Math.random() * (this.maxFadeDuration - this.minFadeDuration)));\r\n\r\n                let color : IColor = this.colors[Math.round(Math.random() * (this.colors.length - 1))]\r\n                leds[i].color = color;\r\n\r\n                strip.set(i, color.r, color.g, color.b, color.a);\r\n            } else {\r\n                this.pixelOntime[i]--;\r\n            }\r\n        }\r\n    \r\n        strip.sync();\r\n    }\r\n\r\n    public getName(): string {\r\n        return \"Fire\";\r\n    }\r\n}","import { IAnimation } from \"../Interfaces/IAnimation\";\r\nimport { Led } from \"../Led\";\r\nimport { IColor } from \"../Interfaces/IColor\";\r\nimport { ParameterParsingError } from \"../Errors/ParameterParsingError\";\r\nimport { IStripController } from \"../Interfaces/IStripController\";\r\n\r\ninterface ISideToCenterData {\r\n    ledCount: number,\r\n    duration: number,\r\n    colors: Array<IColor>\r\n}\r\n\r\nexport class SideToCenter implements IAnimation{\r\n    colors: Array<IColor>;\r\n    curColor: number = 0;\r\n    ledsPerFrame: number;\r\n    border: number = 0;\r\n    percBorder: number = 0;\r\n\r\n    constructor(requestParameter: ISideToCenterData) {\r\n        this.colors = requestParameter.colors;\r\n        this.ledsPerFrame = (requestParameter.ledCount * 0.5) / requestParameter.duration;\r\n    \r\n        if (!(this.colors && this.ledsPerFrame)) {\r\n            throw new ParameterParsingError(\"Wrong parameter provided\");\r\n        }\r\n    }\r\n\r\n    public update(leds: Array<Led>, strip: IStripController): void {\r\n\r\n        // Front\r\n        for (let i = 0; i < this.border; i++) {\r\n            strip.set(i, this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n        }\r\n        // Back\r\n        for (let i = leds.length - 1; i > leds.length - this.border; i--) {\r\n            strip.set(i, this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n        }\r\n\r\n        this.percBorder += this.ledsPerFrame;\r\n        this.border = Math.round(this.percBorder);\r\n\r\n        if (this.border > leds.length * 0.5) {\r\n\r\n            //Fill Center LEDs too\r\n            strip.all(this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n\r\n            this.border = 0;\r\n            this.percBorder = 0;\r\n            if (++this.curColor >= this.colors.length) this.curColor = 0;\r\n        }\r\n\r\n        strip.sync();\r\n    }\r\n\r\n    public getName(): string {\r\n        return \"SideToCenter\";\r\n    }\r\n}","import { IAnimation } from \"../Interfaces/IAnimation\";\r\nimport { Led } from \"../Led\";\r\nimport { IColor } from \"../Interfaces/IColor\";\r\nimport { ParameterParsingError } from \"../Errors/ParameterParsingError\";\r\nimport { IStripController } from \"../Interfaces/IStripController\";\r\n\r\ninterface ISideToSideData {\r\n    ledCount: number,\r\n    duration: number,\r\n    colors: Array<IColor>\r\n}\r\n\r\nexport class SideToSide implements IAnimation{\r\n    colors: Array<IColor>;\r\n    curColor: number = 0;\r\n    ledsPerFrame: number;\r\n    direction: boolean = true;\r\n    border: number = 0;\r\n    percBorder: number = 0; // Used to calc LED Speeds below 0\r\n    ledcount: number = 0;\r\n\r\n    constructor(requestParameter: ISideToSideData) {\r\n        this.colors = requestParameter.colors;\r\n        this.ledsPerFrame = requestParameter.ledCount / requestParameter.duration;\r\n        this.ledcount = requestParameter.ledCount;\r\n\r\n        if (!(this.colors && this.ledsPerFrame)) {\r\n            throw new ParameterParsingError(\"Wrong parameter provided\");\r\n        }\r\n    }\r\n\r\n    public update(leds: Array<Led>, strip: IStripController): void {\r\n\r\n        if (this.direction) {\r\n            for (let i = this.border; i < this.border + this.ledsPerFrame && i <= this.ledcount; i++) {\r\n                strip.set(i, this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n            }\r\n            this.percBorder += this.ledsPerFrame;\r\n            this.border = Math.round(this.percBorder);\r\n        } else {\r\n            for (let i = this.border; i > this.border - this.ledsPerFrame && i >= 0; i--) {\r\n                strip.set(i, this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n            }\r\n            this.percBorder -= this.ledsPerFrame;\r\n            this.border = Math.round(this.percBorder);\r\n        }\r\n\r\n        if (this.border >= leds.length) {\r\n            this.border = leds.length;\r\n            this.percBorder = leds.length;\r\n            if (++this.curColor >= this.colors.length) this.curColor = 0;\r\n            this.direction = !this.direction\r\n        } else if(this.border <= 0) {\r\n            this.border = 0;\r\n            this.percBorder = 0;\r\n            if (++this.curColor >= this.colors.length) this.curColor = 0;\r\n            this.direction = !this.direction\r\n        }\r\n\r\n        strip.sync();\r\n    }\r\n\r\n    public getName(): string {\r\n        return \"SideToSide\";\r\n    }\r\n}","import { AnimationController } from \"./AnimationController\";\r\nimport { IStripController } from \"./Interfaces/IStripController\";\r\nimport { API, APIOptions } from \"./API\";\r\n\r\nconst FS = require(\"fs\");\r\nconst VERSION: string = \"0.2.1\";\r\n\r\n// Welcome\r\nconsole.log('LED-Controller %s', VERSION);\r\nconsole.log('by Lukas Sturm');\r\n\r\nconst ARGUMENTS = parseArguments(process.argv);\r\n\r\n// Default parameters\r\nARGUMENTS[\"ledcount\"] = ARGUMENTS[\"ledcount\"] || 182;\r\nconst LEDCOUNT: number = ARGUMENTS[\"ledcount\"];\r\nconst TOKEN: string = ARGUMENTS[\"token\"] || \"SUPERSECRETCODE\"; // This is super bad practice. A proper Token management needs to be implemented\r\nconst API_PORT: number = ARGUMENTS[\"port\"] || 1234;\r\nconst UPDATES_PER_SECOND: number = ARGUMENTS[\"ups\"] || 30;\r\nconst STRIPCONTROLLER: string = ARGUMENTS[\"stripcontroller\"];\r\nconst PRIVATEKEY: string = ARGUMENTS[\"privatekey\"];\r\nconst PUBLICKEY: string = ARGUMENTS[\"publickey\"];\r\nconst USEHTTP: boolean = ARGUMENTS[\"http\"];\r\n\r\nlet api : API;\r\n\r\n//\r\n//   LED setup\r\n//\r\n\r\n//Load the controller and create a instance\r\nlet strip: IStripController = instantiateStripController(STRIPCONTROLLER);\r\nconst animationController: AnimationController = new AnimationController(strip);\r\n\r\n\r\n//\r\n//   API init and middleware\r\n//\r\nconst API_OPTIONS : APIOptions = {\r\n    port: API_PORT,\r\n    version: VERSION,\r\n    token: TOKEN,\r\n    ledCount: LEDCOUNT\r\n};\r\n\r\n\r\n// Check if cert is available and check if both keys are available\r\nif (!USEHTTP) {\r\n    if (PRIVATEKEY || PUBLICKEY) {\r\n        console.log(\"Using provided Certificate\");\r\n        if (!FS.existsSync(PRIVATEKEY) || !FS.existsSync(PUBLICKEY)) {\r\n            console.error(\"Private or Public Key couldn't be found\");\r\n            exitApplication();\r\n        }\r\n        API_OPTIONS[\"key\"] = FS.readFileSync(PRIVATEKEY);\r\n        API_OPTIONS[\"certificate\"] = FS.readFileSync(PUBLICKEY);\r\n    } else {\r\n        console.error(\"No Certificate provided! \\nUse -http to run the API without the need of certificates\");\r\n        exitApplication(); // User should be aware that he is not using a cert and the flag needs to be set by him\r\n    }\r\n} else {\r\n    console.warn(\"Running in unsecure HTTP mode \\nConsider using a certificate to encrypt API access\");\r\n}\r\n\r\napi = new API(animationController, API_OPTIONS);\r\n\r\n\r\n//\r\n//   Application Start\r\n//\r\n\r\nanimationController.start(UPDATES_PER_SECOND);\r\n\r\napi.listen(function() {\r\n    console.log('API listening on Port %s', API_PORT);\r\n    console.log('Accesstoken: %s', TOKEN);\r\n    console.log('Updates per second: %s', UPDATES_PER_SECOND);\r\n    console.log('Number of LEDs: %s', LEDCOUNT);\r\n});\r\n\r\n\r\n\r\n//\r\n//   Helping Functions\r\n//\r\n\r\nfunction exitApplication() : void {\r\n    if (api !== null && api !== undefined) {\r\n        api.close(() => {\r\n            strip.off();\r\n            strip.shutdown(() => {\r\n                console.log(\"Bye!\");\r\n                process.exit(0);\r\n            });\r\n        });\r\n    } else {\r\n        console.log(\"Bye!\");\r\n        process.exit(0);\r\n    }\r\n}\r\n\r\nfunction instantiateStripController(controllerModuleName : string) : IStripController {\r\n    if (!(typeof controllerModuleName === \"string\")) {\r\n        console.error(`No Controllermodule supplied! Use the \"stripcontroller\" option to specify one`);\r\n        exitApplication();\r\n    }\r\n\r\n    try {\r\n        const stripControllerClass : any = __non_webpack_require__(controllerModuleName.toLowerCase()).default;\r\n        return(new stripControllerClass(ARGUMENTS));\r\n    } catch (error) {\r\n        if (error.hasOwnProperty(\"type\")) {\r\n            if (error.type === \"parameter\") {\r\n                console.error(error.message);\r\n            }\r\n        } else {\r\n            console.error(`Couldn't find ${controllerModuleName} either it's not installed or you misspelled it`);\r\n        }\r\n    \r\n        exitApplication();\r\n    }\r\n}\r\n\r\n// parses Arguments\r\nfunction parseArguments(commandlineArguments : Array<string>) : any {\r\n    let args : any = {};\r\n    for(let i = 0; i < commandlineArguments.length; i++) {\r\n        if (commandlineArguments[i].startsWith(\"-\")) {\r\n            let argName : string = commandlineArguments[i].substring(1, commandlineArguments[i].length); //remove \"-\"\r\n            let argNameLength : number = argName.length;\r\n            if (argNameLength > 0) {\r\n                // check if parameters for argument are provided\r\n                if (i + 1 < commandlineArguments.length) {\r\n                    let param : string = commandlineArguments[i + 1];\r\n                    if (param[0] === \"-\") {\r\n                        // single option\r\n                        args[argName] = true;\r\n                    } else {\r\n                        // argument with parameter\r\n\r\n                        // check if argument is split by spaces\r\n                        if (param.startsWith(\"'\") || param.startsWith('\"')) {\r\n                            let quoteChar: string = param[0];\r\n                            // Parameter escaped\r\n                            // search for end\r\n                            param = param.substring(1, param.length);\r\n                            for (let j : number = i; i < commandlineArguments.length; i++) {\r\n                                let searchingArgu : string = commandlineArguments[j];\r\n                                if (searchingArgu.endsWith(quoteChar)) {\r\n                                    param = param.concat(searchingArgu.substring(0, searchingArgu.length - 1));\r\n                                    i = j; // Set i to the end of the arguments option\r\n                                    break;\r\n                                } else {\r\n                                    param = param.concat(searchingArgu);\r\n                                }\r\n                            }\r\n                        } \r\n                        \r\n                        // Parameter not escaped\r\n                        args[argName] = param;\r\n                        i++; // Advance i to skip the parameter\r\n                    }\r\n                } else {\r\n                    // no more arguments so this has to be an option\r\n                    args[argName] = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return args;\r\n}\r\n\r\nprocess.on (\"SIGINT\", () => exitApplication());\r\nprocess.on (\"SIGTERM\", () => exitApplication());","export class AnimationNotFoundError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        Error.captureStackTrace(this, AnimationNotFoundError);\r\n    }\r\n}","export class AnimationNotRunningError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        Error.captureStackTrace(this, AnimationNotRunningError);\r\n    }\r\n}","export class ParameterParsingError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        Error.captureStackTrace(this, ParameterParsingError);\r\n    }\r\n}","import {IColor} from \"./Interfaces/IColor\";\r\n\r\nexport class Led {\r\n    color: IColor;\r\n\r\n    constructor(color: IColor) {\r\n        this.color = color;\r\n    }\r\n}","import { Led } from \"../Led\";\r\nimport { IColor } from \"../Interfaces/IColor\";\r\nimport { INotification } from \"../Interfaces/INotification\";\r\nimport { ParameterParsingError } from \"../Errors/ParameterParsingError\";\r\nimport { IStripController } from \"../Interfaces/IStripController\";\r\n\r\ninterface IBlinkNotificationData {\r\n    duration: number,\r\n    colors: Array<IColor>;\r\n}\r\n\r\nexport class BlinkNotification implements INotification{\r\n    colors: Array<IColor>;\r\n    activeTime: number;\r\n    curColor: number = -1; // first run skips first color\r\n    frameCounter: number = 0;\r\n    finishCallback: Function;\r\n\r\n    constructor(requestParameter: IBlinkNotificationData) {\r\n        this.colors = requestParameter.colors;\r\n        this.activeTime = requestParameter.duration;\r\n        this.frameCounter = this.activeTime; // Color gets set at first Update\r\n    \r\n        if (!(this.colors && this.activeTime)) {\r\n            throw new ParameterParsingError(\"Wrong parameter provided\");\r\n        }\r\n    }\r\n\r\n    public attachDoneCallback(callback: Function): void {\r\n        this.finishCallback = callback;\r\n    }\r\n\r\n    public update(leds: Array<Led>, strip: IStripController): void {\r\n        if (++this.frameCounter > this.activeTime) {\r\n            this.frameCounter = 0;\r\n            if (++this.curColor >= this.colors.length) {\r\n                this.finishCallback();\r\n                return;\r\n            }\r\n\r\n            strip.all(this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n            strip.sync();\r\n        }\r\n    }\r\n\r\n    public getName(): string {\r\n        return \"Blink\";\r\n    }\r\n}","import { Led } from \"../Led\";\r\nimport { IColor } from \"../Interfaces/IColor\";\r\nimport { INotification } from \"../Interfaces/INotification\";\r\nimport { ParameterParsingError } from \"../Errors/ParameterParsingError\";\r\nimport { IStripController } from \"../Interfaces/IStripController\";\r\n\r\ninterface ICenterToSideNotificationData {\r\n    ledCount: number,\r\n    duration: number,\r\n    colors: Array<IColor>\r\n}\r\n\r\nexport class CenterToSideNotification implements INotification{\r\n    colors: Array<IColor>;\r\n    curColor: number = 0;\r\n    ledsPreFrame: number;\r\n    border: number = 0;\r\n    centerLED: number = 0;\r\n    finishCallback: Function;\r\n    ledCount: number;\r\n\r\n    constructor(requestParameter: ICenterToSideNotificationData) {\r\n        this.colors = requestParameter.colors;\r\n        this.centerLED = Math.round(requestParameter.ledCount * 0.5);\r\n        this.ledsPreFrame = Math.round(this.centerLED / requestParameter.duration);\r\n        this.ledCount = requestParameter.ledCount;\r\n\r\n        if (!(this.colors && this.centerLED && this.ledsPreFrame)) {\r\n            throw new ParameterParsingError(\"Wrong parameter provided\");\r\n        }\r\n    }\r\n\r\n    public attachDoneCallback(callback: Function): void {\r\n        this.finishCallback = callback;\r\n    }\r\n\r\n    public update(leds: Array<Led>, strip: IStripController): void {\r\n\r\n        // Front\r\n        for (let i = this.centerLED; i < this.centerLED + this.border && i < this.ledCount; i++) {\r\n            strip.set(i, this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n        }\r\n        // Back\r\n        for (let i = this.centerLED; i > this.centerLED - this.border && i > 0; i--) {\r\n            strip.set(i, this.colors[this.curColor].r, this.colors[this.curColor].g, this.colors[this.curColor].b, this.colors[this.curColor].a);\r\n        }\r\n        strip.sync();\r\n\r\n        this.border += this.ledsPreFrame;\r\n\r\n        if (this.border > leds.length * 0.5) {\r\n            this.border = 0;\r\n            if (++this.curColor >= this.colors.length) this.finishCallback();\r\n        }\r\n    }\r\n\r\n    public getName(): string {\r\n        return \"CenterToSide\";\r\n    }\r\n}","import { Led } from \"../Led\";\r\nimport { IColor } from \"../Interfaces/IColor\";\r\nimport { INotification } from \"../Interfaces/INotification\";\r\nimport { ParameterParsingError } from \"../Errors/ParameterParsingError\";\r\nimport { IStripController } from \"../Interfaces/IStripController\";\r\nimport { IAnimation } from \"../Interfaces/IAnimation\";\r\n\r\ninterface IRippleToCenterNotificationData {\r\n    ledCount: number,\r\n    cycleDuration: number,\r\n    cycles: number,\r\n    size: number,\r\n    amount: number,\r\n    color: IColor,\r\n    keepAnimationRunning: boolean\r\n}\r\n\r\nexport class RippleToCenterNotification implements INotification {\r\n    color: IColor;\r\n    cycles: number;\r\n    centerLED: number;\r\n    amount: number;\r\n    doneCallback: Function;\r\n    curCycle: number = 0;\r\n    ledsPerFrame: number;\r\n    border: number = 0;\r\n    persBorder: number = 0;\r\n    size: number;\r\n    keepAnimationRunning: boolean;\r\n\r\n    constructor(requestParameter: IRippleToCenterNotificationData) {\r\n        this.color = requestParameter.color;\r\n        this.cycles = requestParameter.cycles || 4;\r\n        this.centerLED = Math.round(requestParameter.ledCount / 2);\r\n        this.amount = requestParameter.amount || 3;\r\n        this.ledsPerFrame = this.centerLED / requestParameter.cycleDuration;\r\n        this.size = requestParameter.size || 10;\r\n        this.keepAnimationRunning = requestParameter.keepAnimationRunning || false;\r\n\r\n        if (this.color === undefined) {\r\n            throw new ParameterParsingError(\"Wrong parameter provided\");\r\n        }\r\n    }\r\n\r\n    public attachDoneCallback(doneCallback: Function): void {\r\n        this.doneCallback = doneCallback;\r\n    }\r\n\r\n    public update(led: Array<Led>, strip: IStripController, animation: IAnimation): void {\r\n        if (this.keepAnimationRunning) {\r\n            animation.update(led, strip, animation);\r\n        } else {\r\n            strip.clear();\r\n        }\r\n\r\n        let curLed: number = 0;\r\n        let isRipple: boolean = false;\r\n        let curAmount: number = 0;\r\n\r\n        for (let i = this.border; i > 0; i--) {\r\n            // Switch leds off after x amount of leds have been lit\r\n            if (++curLed%this.size == 0) {\r\n                isRipple = !isRipple;\r\n                if (curAmount++ == this.amount + 1) break;\r\n            }\r\n\r\n            if (isRipple && i < this.centerLED) {\r\n                strip.set(i, this.color.r, this.color.g, this.color.b, this.color.a);\r\n                strip.set(strip.getLength() - i, this.color.r, this.color.g, this.color.b, this.color.a);\r\n            }\r\n        }\r\n        strip.sync();\r\n\r\n        this.persBorder += this.ledsPerFrame;\r\n        this.border = Math.round(this.persBorder);\r\n\r\n        if (this.border > this.centerLED + this.amount * this.size * 2 - this.size) {\r\n            this.persBorder = this.border = 0;\r\n\r\n            if (++this.curCycle == this.cycles) {\r\n                this.doneCallback();\r\n            }\r\n        }\r\n    }\r\n\r\n    public getName(): string {\r\n        return \"RippleToCenter\";\r\n    }\r\n}","module.exports = require(\"fs\");","module.exports = require(\"restify\");","module.exports = require(\"restify-errors\");"],"sourceRoot":""}